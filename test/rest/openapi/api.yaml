basePath: https://base
info:
  contact:
    email: user@all.users
  description: API for users
  title: User API
  version: @version@
paths:
  /sample/v1/antrittscheck/alarmings/{uuid}/context:
  /sample/v1/alarmings:
  /sample/v1/alarmings/{uuid}/status:
  /sample/v1/alarmings/{uuid}/cancel/req-._uest:
  /sample/v1:
  /sample/v1/users/{id}:
    get:
      operationId: getUser
      parameters:
        - description: User ID
          in: path
          name: id
          required: true
          type: integer
      responses:
        200:
          description: ok
          schema:
            $ref: "#/definitions/User"
        400:
          description: Invalid request
        404:
          description: User not found
        500:
          description: Internal error
      summary: Retrieve a user
      tags:
        - user1
  /sample/v1/users:
    get:
      description: bla
      operationId: getUsers
      responses:
        200:
          description: ok
          schema:
            $ref: "#/definitions/Users"
        400:
          description: invalid request
        500:
          description: internal error
      summary: Get all users.
      tags:
        - user2
    post:
      description: bla
      operationId: postUser
      parameters:
        - description: the user to be added
          in: body
          name: user
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        200:
          description: ok
        400:
          description: invalid request
        500:
          description: internal error
      summary: Add a new user.
      tags:
        - user3
swagger: 2.0
tags:
  - description: user4
    name: user5
tsModels:
  - ../../model/ts/user.ts
